import React from 'react';
import { SvgXml } from 'react-native-svg';
import { ViewStyle } from 'react-native';

// Define SVG icon sources as embedded SVG strings with actual assets
const iconSources = {
  dashboard: `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"/></svg>`,
  
  history: `<svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
    <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="20">
      <path d="M75.11,117h0A21.34,21.34,0,0,1,53.83,95.57V31.39A21.34,21.34,0,0,1,75.11,10h0A21.34,21.34,0,0,1,96.39,31.39V95.57A21.34,21.34,0,0,1,75.11,117Z"/>
      <rect height="64.17" width="319.22" x="96.39" y="31.39"/>
      <rect height="320.87" width="319.22" x="96.39" y="95.57"/>
      <line x1="143.41" x2="256" y1="140.11" y2="140.11"/>
      <line x1="143.41" x2="371.26" y1="186.47" y2="186.47"/>
      <line x1="143.41" x2="371.26" y1="232.82" y2="232.82"/>
      <line x1="143.41" x2="371.26" y1="279.18" y2="279.18"/>
    </g>
  </svg>`,
  
  vault: `<svg viewBox="0 0 1800 1800" fill="currentColor">
    <g>
      <path d="M1762.581,1.514H37.419c-17.352,0-31.407,14.06-31.407,31.407v1557.842
        c0,17.342,14.056,31.406,31.407,31.406h217.792v144.909c0,17.342,14.065,31.407,31.407,31.407h245.651
        c17.352,0,31.407-14.065,31.407-31.407v-144.909h672.647v144.909c0,17.342,14.057,31.407,31.408,31.407h245.649
        c17.343,0,31.408-14.065,31.408-31.407v-144.909h217.792c17.342,0,31.407-14.064,31.407-31.406V32.92
        C1793.988,15.574,1779.923,1.514,1762.581,1.514z M500.862,1735.671H318.026v-109.927h182.835V1735.671z M1481.974,1735.671
        h-182.835v-109.927h182.835V1735.671z M215.154,199.597h1369.691v1230.754H215.154V199.597z"/>
      <path d="M1202.266,514.826c-0.763-0.964-1.569-1.906-2.458-2.796c-0.89-0.89-1.832-1.696-2.796-2.456
        C1120.456,434.335,1015.561,387.842,900,387.842c-115.556,0-220.443,46.484-296.999,121.712c-0.973,0.767-1.924,1.578-2.818,2.473
        c-0.898,0.898-1.708,1.847-2.475,2.82C522.48,591.403,476,696.286,476,811.839c0,115.539,46.471,220.417,121.686,296.968
        c0.771,0.982,1.586,1.941,2.493,2.845c0.907,0.902,1.862,1.718,2.844,2.488c76.551,75.219,181.429,121.695,296.977,121.695
        c115.557,0,220.447-46.489,297.003-121.721c0.964-0.763,1.911-1.57,2.805-2.463c0.893-0.896,1.704-1.841,2.467-2.81
        C1277.511,1032.287,1324,927.396,1324,811.839C1324,696.274,1277.502,591.381,1202.266,514.826z M1196.258,843.247h63.473
        c-6.582,76.025-36.775,145.377-83.251,200.659l-44.789-44.788c-12.265-12.265-32.152-12.265-44.416,0
        c-12.265,12.265-12.265,32.152,0,44.415l44.784,44.79c-55.278,46.471-124.63,76.66-200.651,83.251v-63.481
        c0-17.342-14.065-31.402-31.407-31.402c-17.352,0-31.408,14.061-31.408,31.402v63.481c-76.029-6.591-145.381-36.78-200.66-83.256
        l44.784-44.785c12.264-12.263,12.264-32.146,0-44.415c-12.26-12.256-32.148-12.265-44.417,0l-44.784,44.784
        c-46.476-55.278-76.666-124.63-83.255-200.655h63.48c17.342,0,31.408-14.062,31.408-31.408s-14.065-31.407-31.408-31.407h-63.48
        c6.589-76.025,36.779-145.375,83.255-200.655l44.784,44.789c6.134,6.132,14.17,9.199,22.206,9.199
        c8.036,0,16.081-3.067,22.21-9.199c12.264-12.264,12.264-32.15,0-44.417l-44.784-44.789c55.278-46.476,124.63-76.667,200.66-83.253
        v63.476c0,17.347,14.056,31.408,31.408,31.408c17.342,0,31.407-14.061,31.407-31.408v-63.476
        c76.025,6.585,145.373,36.777,200.656,83.253l-44.789,44.789c-12.265,12.266-12.265,32.152,0,44.417
        c6.129,6.132,14.17,9.199,22.211,9.199c8.035,0,16.071-3.067,22.205-9.199l44.789-44.789
        c46.476,55.28,76.669,124.628,83.251,200.655h-63.473c-17.351,0-31.407,14.061-31.407,31.407S1178.907,843.247,1196.258,843.247z"/>
      <path d="M900,654.805c-86.589,0-157.037,70.445-157.037,157.034c0,86.59,70.448,157.037,157.037,157.037
        c86.59,0,157.036-70.447,157.036-157.037C1057.036,725.25,986.59,654.805,900,654.805z M900,906.062
        c-51.958,0-94.222-42.267-94.222-94.223c0-51.953,42.265-94.22,94.222-94.22c51.952,0,94.223,42.267,94.223,94.22
        C994.223,863.794,951.952,906.062,900,906.062z"/>
    </g>
  </svg>`,
  
  settings: `<svg viewBox="0 0 24 24" fill="currentColor">
    <path d="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.22,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.22,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.68 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z"/>
  </svg>`,
  
  profile: `<svg viewBox="0 0 24 24" fill="currentColor">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5 7.063C16.5 10.258 14.57 13 12 13c-2.572 0-4.5-2.742-4.5-5.938C7.5 3.868 9.16 2 12 2s4.5 1.867 4.5 5.063zM4.102 20.142C4.487 20.6 6.145 22 12 22c5.855 0 7.512-1.4 7.898-1.857a.416.416 0 0 0 .09-.317C19.9 18.944 19.106 15 12 15s-7.9 3.944-7.989 4.826a.416.416 0 0 0 .091.317z"/>
  </svg>`,
  
  edit: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M20,16v4a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V6A2,2,0,0,1,4,4H8"/>
    <polygon points="12.5 15.8 22 6.2 17.8 2 8.3 11.5 8 16 12.5 15.8"/>
  </svg>`,
  
  delete: `<svg viewBox="0 0 1024 1024" fill="currentColor">
    <path d="M352 192V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64H96a32 32 0 0 1 0-64h256zm64 0h192v-64H416v64zM192 960a32 32 0 0 1-32-32V256h704v672a32 32 0 0 1-32 32H192zm224-192a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32zm192 0a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32z"/>
  </svg>`,
  
  reminder: `<svg viewBox="0 0 24 24" fill="currentColor">
    <path d="M10,21H14A2,2 0 0,1 12,23A2,2 0 0,1 10,21M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M17,11A5,5 0 0,0 12,6A5,5 0 0,0 7,11V18H17V11Z"/>
  </svg>`,
  
  // Simple checkmark icon (no circle)
  checkmark: `<svg viewBox="0 0 24 24" fill="none">
    <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" fill="currentColor"/>
  </svg>`,
  
  // Green tick with circle (from yellow tick.svg)
  tickWithCircle: `<svg viewBox="0 0 1024 1024" fill="none">
    <path d="M511.891456 928.549888c229.548032 0 415.634432-186.0864 415.634432-415.634432C927.525888 283.3664 741.439488 97.28 511.890432 97.28 282.343424 97.28 96.258048 283.3664 96.258048 512.915456c0 229.548032 186.084352 415.634432 415.634432 415.634432" fill="#22C55E"/>
    <path d="M436.571136 707.376128l330.3936-330.3936c5.506048-5.507072 8.571904-12.803072 8.633344-20.544512 0.060416-7.85408-2.961408-15.235072-8.511488-20.784128 0.001024-0.012288-0.001024-0.002048-0.001024-0.002048l-0.001024-0.001024c-5.410816-5.409792-12.978176-8.489984-20.687872-8.460288-7.810048 0.032768-15.13984 3.081216-20.640768 8.58112l-309.11488 309.116928-94.99648-94.998528c-5.501952-5.501952-12.833792-8.5504-20.642816-8.58112h-0.115712c-7.69536 0-15.186944 3.08224-20.569088 8.465408-11.360256 11.36128-11.307008 29.899776 0.118784 41.325568l109.924352 109.924352a29.017088 29.017088 0 0 0 4.883456 6.474752c5.658624 5.6576 13.095936 8.482816 20.550656 8.481792a29.31712 29.31712 0 0 0 20.77696-8.604672M511.891456 97.28C282.3424 97.28 96.256 283.3664 96.256 512.915456s186.0864 415.634432 415.635456 415.634432c229.548032 0 415.634432-186.085376 415.634432-415.634432C927.525888 283.365376 741.439488 97.28 511.891456 97.28m0 40.96c50.597888 0 99.661824 9.901056 145.82784 29.427712 44.61056 18.868224 84.683776 45.889536 119.10656 80.31232 34.422784 34.422784 61.444096 74.496 80.313344 119.107584 19.525632 46.164992 29.426688 95.228928 29.426688 145.82784s-9.901056 99.662848-29.426688 145.82784c-18.869248 44.61056-45.89056 84.6848-80.313344 119.107584s-74.496 61.443072-119.10656 80.31232c-46.166016 19.526656-95.229952 29.426688-145.82784 29.426688-50.598912 0-99.662848-9.900032-145.828864-29.426688-44.61056-18.869248-84.683776-45.889536-119.10656-80.31232-34.422784-34.422784-61.444096-74.497024-80.313344-119.107584C147.117056 612.57728 137.216 563.514368 137.216 512.915456s9.901056-99.662848 29.426688-145.82784c18.869248-44.611584 45.89056-84.6848 80.313344-119.107584s74.496-61.444096 119.10656-80.31232C412.228608 148.140032 461.292544 138.24 511.891456 138.24" fill="#000000"/>
  </svg>`,
  
  share: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/>
    <polyline points="16,6 12,2 8,6"/>
    <line x1="12" y1="2" x2="12" y2="15"/>
  </svg>`,
  
  backicon: `<svg viewBox="0 0 1024 1024" fill="currentColor">
    <path d="M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"/>
    <path d="m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"/>
  </svg>`,
};

export type IconName = keyof typeof iconSources;

interface SvgIconProps {
  name: IconName;
  size?: number;
  color?: string;
  style?: ViewStyle;
  accessibilityLabel?: string;
}

export const SvgIcon: React.FC<SvgIconProps> = ({ 
  name, 
  size = 24, 
  color = '#000000',
  style,
  accessibilityLabel
}) => {
  const svgSource = iconSources[name];
  
  if (!svgSource) {
    console.warn(`SvgIcon: Icon "${name}" not found`);
    return null;
  }

  // Replace currentColor with the actual color
  const coloredSvg = svgSource.replace(/currentColor/g, color);

  return (
    <SvgXml 
      xml={coloredSvg}
      width={size}
      height={size}
      style={style}
      accessibilityLabel={accessibilityLabel || `${name} icon`}
    />
  );
};